services:
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: padel
      POSTGRES_PASSWORD: padel_secret
      POSTGRES_DB: padeltracker
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready padel -d padeltracker -q"]
      interval: 5s
      timeout: 3s
      retries: 5
    restart: unless-stopped
    networks: [npm_stack]

  backend:
    build:
      context: ./backend
      args:
        DATABASE_URL: postgres://padel:padel_secret@db:5432/padeltracker
    environment:
      DATABASE_URL: postgres://padel:padel_secret@db:5432/padeltracker
      PORT: 4000
    ports:
      - "4000:4000"
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks: [npm_stack]

  frontend:
    build: ./frontend
    expose:
      - "80"        # only visible to NPM on the npm_stack network
    depends_on:
      - backend
    restart: unless-stopped
    networks: [npm_stack]

volumes:
  db-data:

networks:
  npm_stack:
    external: true
    
